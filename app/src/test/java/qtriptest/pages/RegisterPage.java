package qtriptest.pages;

import qtriptest.SeleniumWrapper;
import java.util.UUID;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.pagefactory.AjaxElementLocatorFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class RegisterPage {

    private  RemoteWebDriver driver;
    private String url = "https://qtripdynamic-qa-frontend.vercel.app/pages/register/";
    private final static String REGISTER_PAGE_IDENTIFIER = "/pages/register";

    public static String USER_EMAIL;

    @FindBy(xpath = "//input[@name= 'email']")
    
    private WebElement emailtextbox;


    @FindBy(name = "password")
    
    private WebElement passwordtextbox;

    @FindBy(name = "confirmpassword")
    
    private WebElement confirmtextbox;

    @FindBy(xpath="//button[text()='Register Now']")
    
    private WebElement registerNow;

    // @FindBy(xpath="//div[contains(@class, 'card border')]")
    
    // private WebElement registerform;
    private SeleniumWrapper seleniumWrapper;
    
   

    public RegisterPage(RemoteWebDriver driver){
        this.driver = driver;
        this.seleniumWrapper = new SeleniumWrapper();
        AjaxElementLocatorFactory ajax = new AjaxElementLocatorFactory(driver, 10);
        PageFactory.initElements(ajax, this);
        driver.manage().window().maximize();

    }
    
    public boolean checkRegisterPageNavigation() {
        
        try {
            return seleniumWrapper.navigate(driver, url) &&
                   driver.getCurrentUrl().contains(REGISTER_PAGE_IDENTIFIER) &&
                   SeleniumWrapper.findElementWithRetry(driver, By.xpath("//div[contains(@class, 'card border')]"), 30) != null;
        } catch (Exception e) {
            System.out.println("Error checking register page navigation: " + e.getMessage());
            return false;
        }
    }


    public  void registernewuser(String email, String password, String confirmpassword, boolean isUserAutoGenerated)throws InterruptedException{
        if(isUserAutoGenerated && emailtextbox!=null && passwordtextbox!=null && confirmtextbox!=null && registerNow!=null){
            
            email = String.format("testuser_%s@email.com", UUID.randomUUID());
            USER_EMAIL = email;
            seleniumWrapper.sendKeys(emailtextbox, email);
            seleniumWrapper.sendKeys(passwordtextbox, password);
            seleniumWrapper.sendKeys(confirmtextbox, confirmpassword);
            seleniumWrapper.click(registerNow, driver);
        }
    }


}


